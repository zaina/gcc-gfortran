From 49858c1b9bcbf9b3e1a27741976f4a919884bca5 Mon Sep 17 00:00:00 2001
From: Jim MacArthur <jim.macarthur@codethink.co.uk>
Date: Wed, 11 Nov 2015 15:37:00 +0000
Subject: [PATCH 33/47] Add support for integer expressions in IF statements

---
 gcc/fortran/parse.c | 8 ++++++++
 1 file changed, 8 insertions(+)

diff --git a/gcc/fortran/parse.c b/gcc/fortran/parse.c
index 2dba05a..3a5e1ce 100644
--- a/gcc/fortran/parse.c
+++ b/gcc/fortran/parse.c
@@ -26,6 +26,7 @@ along with GCC; see the file COPYING3.  If not see
 #include "match.h"
 #include "parse.h"
 #include "debug.h"
+#include "arith.h"
 
 /* Current statement label.  Zero means no statement label.  Because new_st
    can get wiped during statement matching, we have to keep it separate.  */
@@ -2950,6 +2951,13 @@ parse_if_block (void)
   d = add_statement ();
 
   d->expr1 = top->expr1;
+
+  if (gfc_option.flag_oracle_support && top->expr1->ts.type != BT_LOGICAL)
+    {
+      d->expr1 = gfc_ne (top->expr1, gfc_get_int_expr (1, &gfc_current_locus, 0), INTRINSIC_NE);
+      gfc_warning_now ("The type of condition in this IF statement isn't LOGICAL; it will be true if it evaluates to nonzero.", top->expr1->ts.type);
+    }
+
   top->expr1 = NULL;
   top->block = d;
 
-- 
1.9.1

