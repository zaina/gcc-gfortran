From cab54ea15ad4f2257008276b19b778af4e2aa38d Mon Sep 17 00:00:00 2001
From: Mark Doffman <mark.doffman@codethink.co.uk>
Date: Thu, 5 Jun 2014 20:47:51 +0000
Subject: [PATCH 03/47] Add tests for AUTOMATIC keyword.

---
 gcc/testsuite/gfortran.dg/automatic_1.f90      | 31 ++++++++++++++++++++++++++
 gcc/testsuite/gfortran.dg/automatic_common.f90 |  6 +++++
 gcc/testsuite/gfortran.dg/automatic_data.f90   |  9 ++++++++
 gcc/testsuite/gfortran.dg/automatic_repeat.f90 |  8 +++++++
 gcc/testsuite/gfortran.dg/automatic_save.f90   |  8 +++++++
 5 files changed, 62 insertions(+)
 create mode 100644 gcc/testsuite/gfortran.dg/automatic_1.f90
 create mode 100644 gcc/testsuite/gfortran.dg/automatic_common.f90
 create mode 100644 gcc/testsuite/gfortran.dg/automatic_data.f90
 create mode 100644 gcc/testsuite/gfortran.dg/automatic_repeat.f90
 create mode 100644 gcc/testsuite/gfortran.dg/automatic_save.f90

diff --git a/gcc/testsuite/gfortran.dg/automatic_1.f90 b/gcc/testsuite/gfortran.dg/automatic_1.f90
new file mode 100644
index 0000000..a7684e9
--- /dev/null
+++ b/gcc/testsuite/gfortran.dg/automatic_1.f90
@@ -0,0 +1,31 @@
+! { dg-do run }
+! { dg-options "-O2 -std=legacy -fno-automatic" }
+      subroutine foo (b)
+        logical b
+        integer i, j
+        character*24 s
+        automatic i
+        if (b) then
+          i = 26
+          j = 131
+          s = 'This is a test string'
+        else
+          if (i .eq. 26 .or. j .ne. 131) call abort
+          if (s .ne. 'This is a test string') call abort
+        end if
+      end subroutine foo
+      subroutine bar (s)
+        character*42 s
+        if (s .ne. '0123456789012345678901234567890123456') call abort
+        call foo (.false.)
+      end subroutine bar
+      subroutine baz
+        character*42 s
+        ! Just clobber stack a little bit.
+        s = '0123456789012345678901234567890123456'
+        call bar (s)
+      end subroutine baz
+      call foo (.true.)
+      call baz
+      call foo (.false.)
+      end
diff --git a/gcc/testsuite/gfortran.dg/automatic_common.f90 b/gcc/testsuite/gfortran.dg/automatic_common.f90
new file mode 100644
index 0000000..df8b7dc
--- /dev/null
+++ b/gcc/testsuite/gfortran.dg/automatic_common.f90
@@ -0,0 +1,6 @@
+! { dg-do compile }
+! { dg-options "-std=legacy -fno-automatic" }
+! A common variable may not have the AUTOMATIC attribute.
+INTEGER, AUTOMATIC :: X
+COMMON /COM/ X ! { dg-error "conflicts with AUTOMATIC attribute" }
+END
diff --git a/gcc/testsuite/gfortran.dg/automatic_data.f90 b/gcc/testsuite/gfortran.dg/automatic_data.f90
new file mode 100644
index 0000000..16203e3
--- /dev/null
+++ b/gcc/testsuite/gfortran.dg/automatic_data.f90
@@ -0,0 +1,9 @@
+! { dg-do compile }
+! { dg-options "-std=legacy -fno-automatic" }
+! An AUTOMATIC statement cannot be used with SAVE
+FUNCTION X()
+DATA y/2.5/
+AUTOMATIC y ! { dg-error "DATA attribute conflicts with AUTOMATIC attribute" }
+y = 1
+END FUNCTION X
+END
diff --git a/gcc/testsuite/gfortran.dg/automatic_repeat.f90 b/gcc/testsuite/gfortran.dg/automatic_repeat.f90
new file mode 100644
index 0000000..9bc85ec
--- /dev/null
+++ b/gcc/testsuite/gfortran.dg/automatic_repeat.f90
@@ -0,0 +1,8 @@
+! { dg-do compile }
+! { dg-options "-std=legacy -fno-automatic" }
+! An AUTOMATIC statement cannot duplicated
+FUNCTION X()
+REAL, AUTOMATIC, AUTOMATIC :: Y ! { dg-error "Duplicate AUTOMATIC attribute" }
+y = 1
+END FUNCTION X
+END
diff --git a/gcc/testsuite/gfortran.dg/automatic_save.f90 b/gcc/testsuite/gfortran.dg/automatic_save.f90
new file mode 100644
index 0000000..5e20643
--- /dev/null
+++ b/gcc/testsuite/gfortran.dg/automatic_save.f90
@@ -0,0 +1,8 @@
+! { dg-do compile }
+! { dg-options "-std=legacy -fno-automatic" }
+! An AUTOMATIC statement cannot be used with SAVE
+FUNCTION X()
+REAL, SAVE, AUTOMATIC :: Y ! { dg-error "SAVE attribute conflicts with AUTOMATIC attribute" }
+y = 1
+END FUNCTION X
+END
-- 
1.9.1

